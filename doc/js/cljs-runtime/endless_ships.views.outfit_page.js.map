{"version":3,"sources":["endless_ships/views/outfit_page.cljs"],"mappings":"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","names":["endless-ships.views.outfit-page/render-license","outfit","vec__27350","cljs.core.nth","license","endless-ships.views.outfit-page/image-url","cljs.core/deref","filename","js/window.encodeURI","plugin","G__27353","re-frame.core/subscribe","cljs.core.get_in","endless-ships.views.outfit-page/render-ammo","cljs.core/contains?","endless-ships.routes/outfit-link","endless-ships.views.outfit-page/weapon-attributes","weapon","endless-ships.views.utils/render-attribute","cljs.core.comp","endless-ships.views.outfit-page/outfit-page","outfit-name","G__27354","installations","G__27355","planets","G__27356","cljs.core/seq","endless-ships.views.utils/render-description","cljs.core._EQ_","cljs.core/count","iter__4622__auto__","s__27358","cljs.core/LazySeq","temp__5753__auto__","cljs.core/chunked-seq?","c__4620__auto__","size__4621__auto__","b__27360","cljs.core/chunk-buffer","i__27359","map__27361","cljs.core/-nth","cljs.core/--destructure-map","cljs.core.get","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__27357","cljs.core/chunk-rest","map__27362","cljs.core/first","cljs.core/cons","cljs.core/rest","ship-name","ship-modification","quantity","link","endless-ships.routes/ship-modification-link","endless-ships.routes/ship-link","key","s__27364","b__27366","i__27365","map__27367","iter__27363","map__27368","name","system","cljs.core/chunk-first"],"sourcesContent":["(ns endless-ships.views.outfit-page\n  (:require [re-frame.core :as rf]\n            [endless-ships.subs :as subs]\n            [endless-ships.views.utils :refer [render-attribute render-description\n                                               kebabize nbspize]]\n            [endless-ships.routes :as routes]))\n\n(defn- render-license [outfit]\n  (let [[license] (:licenses outfit)]\n    (when (some? license)\n      [:p.italic\n       {:style {:margin-top 20}}\n       (str \"This outfit requires a \" license \" license.\")])))\n\n(defn- image-url [outfit]\n  (let [filename (str (-> outfit :thumbnail js/window.encodeURI) \".png\")\n        plugin @(rf/subscribe [::subs/plugin (get-in outfit [:meta :image :origin])])]\n    (str (:base-image-url plugin) filename)))\n\n(defn- render-ammo [outfit]\n  (when (contains? outfit :ammo)\n    [:li \"ammo: \" (routes/outfit-link (:ammo outfit))]))\n\n(defn weapon-attributes [weapon]\n  [:div\n   [:br]\n   (render-ammo weapon)\n   (render-attribute weapon :range \"range\")\n   (render-attribute weapon (comp :per-second :shield-damage) \"shield damage / second\")\n   (render-attribute weapon (comp :per-second :hull-damage) \"hull damage / second\")\n   (render-attribute weapon (comp :per-second :heat-damage) \"heat damage / second\")\n   (render-attribute weapon (comp :per-second :ion-damage) \"ion damage / second\")\n   (render-attribute weapon (comp :per-second :disruption-damage) \"disruption damage / second\")\n   (render-attribute weapon (comp :per-second :slowing-damage) \"slowing damage / second\")\n   (render-attribute weapon (comp :per-second :firing-energy) \"firing energy / second\")\n   (render-attribute weapon (comp :per-second :firing-heat) \"firing heat / second\")\n   (render-attribute weapon (comp :per-second :firing-fuel) \"firing fuel / second\")\n   (render-attribute weapon :shots-per-second \"shots / second\")\n   (render-attribute weapon :turret-turn \"turret turn rate\")\n   (when (and (contains? weapon :shots-per-second)\n              (number? (:shots-per-second weapon)))\n     [:br])\n   (render-attribute weapon (comp :per-shot :shield-damage) \"shield damage / shot\")\n   (render-attribute weapon (comp :per-shot :hull-damage) \"hull damage / shot\")\n   (render-attribute weapon (comp :per-shot :heat-damage) \"heat damage / shot\")\n   (render-attribute weapon (comp :per-shot :ion-damage) \"ion damage / shot\")\n   (render-attribute weapon (comp :per-shot :disruption-damage) \"disruption damage / shot\")\n   (render-attribute weapon (comp :per-shot :slowing-damage) \"slowing damage / shot\")\n   (render-attribute weapon (comp :per-shot :firing-energy) \"firing energy / shot\")\n   (render-attribute weapon (comp :per-shot :firing-heat) \"firing heat / shot\")\n   (render-attribute weapon :inaccuracy \"inaccuracy\")\n   (render-attribute weapon :anti-missile \"anti-missile\")])\n\n(defn outfit-page [outfit-name]\n  (let [outfit @(rf/subscribe [::subs/outfit outfit-name])\n        installations @(rf/subscribe [::subs/outfit-installations (:name outfit)])\n        planets @(rf/subscribe [::subs/outfit-planets (:name outfit)])]\n    [:div.app\n     [:div.row\n      [:div.col-md-12\n       [:div.panel.panel-default\n        [:div.panel-heading (:name outfit)]\n        [:div.panel-body\n         [:div.media\n          [:div.media-body\n           [:div.row\n            [:div.col-md-4\n             (if (seq (:description outfit))\n               (render-description outfit)\n               [:p.italic \"No description.\"])\n             (render-license outfit)]\n            [:div.col-md-4\n             [:ul\n              (render-attribute outfit :category \"category\")\n              (render-attribute outfit :cost \"cost\")\n              (render-attribute outfit :outfit-space \"outfit space needed\")\n              (render-attribute outfit :weapon-capacity \"weapon capacity needed\")\n              (render-attribute outfit :engine-capacity \"engine capacity needed\")]]\n            [:div.col-md-4\n             (when (contains? outfit :hyperdrive)\n               [:p.italic \"Allows you to make hyperjumps.\"])\n             (when (contains? outfit :jump-drive)\n               [:p.italic \"Lets you jump to any nearby system.\"])\n             (when (= (:installable outfit) -1)\n               [:p.italic \"This is not an installable item.\"])\n             [:ul\n              (render-attribute outfit :mass \"mass\")\n              (render-attribute outfit :thrust \"thrust\")\n              (render-attribute outfit :thrusting-energy \"thrusting energy\")\n              (render-attribute outfit :thrusting-heat \"thrusting heat\")\n              (render-attribute outfit :turn \"turn\")\n              (render-attribute outfit :turning-energy \"turning energy\")\n              (render-attribute outfit :turning-heat \"turning heat\")\n              (render-attribute outfit :afterburner-energy \"afterburner energy\")\n              (render-attribute outfit :afterburner-fuel \"afterburner fuel\")\n              (render-attribute outfit :afterburner-heat \"afterburner heat\")\n              (render-attribute outfit :afterburner-thrust \"afterburner thrust\")\n              (render-attribute outfit :reverse-thrust \"reverse thrust\")\n              (render-attribute outfit :reverse-thrusting-energy \"reverse thrusting energy\")\n              (render-attribute outfit :reverse-thrusting-heat \"reverse thrusting heat\")\n              (render-attribute outfit :energy-generation \"energy generation\")\n              (render-attribute outfit :solar-collection \"solar collection\")\n              (render-attribute outfit :energy-capacity \"energy capacity\")\n              (render-attribute outfit :energy-consumption \"energy consumption\")\n              (render-attribute outfit :heat-generation \"heat generation\")\n              (render-attribute outfit :cooling \"cooling\")\n              (render-attribute outfit :active-cooling \"active cooling\")\n              (render-attribute outfit :cooling-energy \"cooling energy\")\n              (render-attribute outfit :hull-repair-rate \"hull repair rate\")\n              (render-attribute outfit :hull-energy \"hull energy\")\n              (render-attribute outfit :hull-heat \"hull heat\")\n              (render-attribute outfit :shield-generation \"shield generation\")\n              (render-attribute outfit :shield-energy \"shield energy\")\n              (render-attribute outfit :shield-heat \"shield heat\")\n              (render-attribute outfit :ramscoop \"ramscoop\")\n              (render-attribute outfit :required-crew \"required crew\")\n              (render-attribute outfit :capture-attack \"capture attack\")\n              (render-attribute outfit :capture-defense \"capture defense\")\n              (render-attribute outfit :illegal \"illegal\")\n              (render-attribute outfit :cargo-space \"cargo space\")\n              (render-attribute outfit :cooling-inefficiency \"cooling inefficiency\")\n              (render-attribute outfit :heat-dissipation \"heat dissipation\")\n              (render-attribute outfit :fuel-capacity \"fuel capacity\")\n              (render-attribute outfit :jump-fuel \"jump fuel\")\n              (render-attribute outfit :jump-speed \"jump speed\")\n              (render-attribute outfit :scram-drive \"scram drive\")\n              (render-attribute outfit :atmosphere-scan \"atmosphere scan\")\n              (render-attribute outfit :cargo-scan-power \"cargo scan power\")\n              (render-attribute outfit :cargo-scan-speed \"cargo scan speed\")\n              (render-attribute outfit :outfit-scan-power \"outfit scan power\")\n              (render-attribute outfit :outfit-scan-speed \"outfit scan speed\")\n              (render-attribute outfit :asteroid-scan-power \"asteroid scan power\")\n              (render-attribute outfit :tactical-scan-power \"tactical scan power\")\n              (render-attribute outfit :scan-interference \"scan interference\")\n              (render-attribute outfit :radar-jamming \"radar jamming\")\n              (render-attribute outfit :cloak \"cloak\")\n              (render-attribute outfit :cloaking-energy \"cloaking energy\")\n              (render-attribute outfit :cloaking-fuel \"cloaking fuel\")\n              (render-attribute outfit :bunks \"bunks\")\n              (render-attribute outfit :automaton \"automaton\")\n              (render-attribute outfit :quantum-keystone \"quantum keystone\")\n              (render-attribute outfit :map \"map\")\n              (render-ammo outfit)\n              (render-attribute outfit :gatling-round-capacity \"gatling round capacity\")\n              (render-attribute outfit :javelin-capacity \"javelin capacity\")\n              (render-attribute outfit :finisher-capacity \"finisher capacity\")\n              (render-attribute outfit :tracker-capacity \"tracker capacity\")\n              (render-attribute outfit :rocket-capacity \"rocket capacity\")\n              (render-attribute outfit :minelayer-capacity \"minelayer capacity\")\n              (render-attribute outfit :piercer-capacity \"piercer capacity\")\n              (render-attribute outfit :meteor-capacity \"meteor capacity\")\n              (render-attribute outfit :railgun-slug-capacity \"railgun slug capacity\")\n              (render-attribute outfit :sidewinder-capacity \"sidewinder capacity\")\n              (render-attribute outfit :thunderhead-capacity \"thunderhead capacity\")\n              (render-attribute outfit :torpedo-capacity \"torpedo capacity\")\n              (render-attribute outfit :typhoon-capacity \"typhoon capacity\")\n              (render-attribute outfit :emp-torpedo-capacity \"EMP torpedo capacity\")\n              (when (contains? outfit :weapon)\n                [weapon-attributes (:weapon outfit)])]\n             (when (contains? outfit :unplunderable)\n               [:p.italic \"This outfit cannot be plundered.\"])]]]\n          [:div.media-right\n           (when (contains? outfit :thumbnail)\n             [:img {:src (image-url outfit)}])]]]]]]\n     [:div.row\n      [:div.col-md-6\n       [:div.panel.panel-default\n        [:div.panel-heading (str \"Installed on \" (count installations) \" ships\")]\n        (when (seq installations)\n          [:div.panel-body\n           [:ul.list-group\n            (for [{:keys [ship-name ship-modification quantity]} installations]\n              (let [link (if (some? ship-modification)\n                           (routes/ship-modification-link ship-name ship-modification)\n                           (routes/ship-link ship-name))\n                    key [ship-name ship-modification]]\n                (if (= quantity 1)\n                  ^{:key key} [:li.list-group-item link]\n                  ^{:key key} [:li.list-group-item\n                               [:span.badge quantity]\n                               link])))]])]]\n      [:div.col-md-6\n       [:div.panel.panel-default\n        [:div.panel-heading (str \"Sold at \" (count planets) \" planets\")]\n        (when (seq planets)\n          [:div.panel-body\n           [:ul.list-group\n            (for [{:keys [name system]} planets]\n              ^{:key name} [:li.list-group-item\n                            name\n                            \" \"\n                            [:span.label.label-default system]])]])]]]]))\n"]}