{"version":3,"sources":["endless_ships/routes.cljs"],"mappings":";AAOA,oCAAA,pCAAKA;AAGL,8BAAA,mFAAA,IAAA,gDAAA,GAAA,uDAAA,mFAAA,SAAA,oEAAA,oDAAA,mFAAA,SAAA,4DAAA,IAAA,qHAAA,2FAAA,8EAAA,UAAA,4DAAA,mFAAA,WAAA,qHAAA,+EAAA,rtCAAKC,kqBAG6BD,kcAEbA;AAErB,iCAAA,jCAAOE,0EAAWC;AAAlB,AACE,IAAAC,aAEM,AAACK,sBAAiBR,4BAAOE;IAF/BC,iBAAA,AAAAC,4BAAAD;cAAA,AAAAE,4CAAAF,eAAA,rEAAcG;mBAAd,AAAAD,4CAAAF,eAAA,qEAAA,/IAAsBI;AAAtB,AAAA,0FAGGD,QAAQC;;AAEb,sCAAA,tCAAOE,oFAAgBC;AAAvB,AACE,GAAI,GAAA,cAAA,bAAOC;AACT,UAAA,OAAA,jBAACA,4BAA+BC;;AADlC;;AAEA,IAAAC,WAAA,mFAAA,0GAAmCH;AAAnC,AAAA,oHAAAG,6CAAAA,zJAACC,uDAAAA,iEAAAA;;AAEH,AAAKC,+BACH,AAACC,gDAAQC,mBAAcjB;AAEzB,mCAAA,nCAAMkB;AAAN,AACE,IAAMC,UAAQ,AAACC,iBAAYX,oCAAeR;AAA1C,AACE,OAAckB;;AAElB,iCAAA,jCAAME,0EAAWC;AAAjB,AACE,IAAMpB,MAAI,6BAAA,oDAAA,jFAACa,6IAAyB,AAACQ,mCAASD;AAA9C,AAAA,0FAAA,gDAAA,2CAAA,qDACapB,YAAK,AAACsB,kCAAQF;;AAE7B,8CAAA,9CAAMG,oGAAwBH,KAAKI;AAAnC,AACE,IAAMxB,MAAI,CAAA,mDAAA,zCAAe,AAACqB,mCAASD,UAAU,AAACC,mCAASG;AAAvD,AAAA,0FAAA,gDAAA,2CAAA,qDACaxB,YAAK,AAACsB,kCAAQE;;AAE7B,mCAAA,nCAAMC,8EAAaL;AAAnB,AACE,IAAMpB,MAAI,6BAAA,wDAAA,rFAACa,oJAA6B,AAACQ,mCAASD;AAAlD,AAAA,0FAAA,gDAAA,2CAAA,qDACapB,YAAK,AAACsB,kCAAQF","names":["endless-ships.routes/name-pattern","endless-ships.routes/routes","endless-ships.routes/parse-url","url","map__28492","cljs.core/--destructure-map","cljs.core.get","handler","route-params","bidi.bidi/match-route","endless-ships.routes/dispatch-route","matched-route","js/window.ga","js/location.pathname","G__28497","re-frame.core/dispatch","endless-ships.routes/url-for","cljs.core.partial","bidi.bidi/path-for","endless-ships.routes/start!","history","pushy.core/pushy","endless-ships.routes/ship-link","name","endless-ships.views.utils/kebabize","endless-ships.views.utils/nbspize","endless-ships.routes/ship-modification-link","modification","endless-ships.routes/outfit-link"],"sourcesContent":["(ns endless-ships.routes\n  (:require [re-frame.core :as rf]\n            [bidi.bidi :as bidi]\n            [pushy.core :as pushy]\n            [endless-ships.events :as events]\n            [endless-ships.views.utils :refer [kebabize nbspize]]))\n\n(def name-pattern\n  #\"[A-Za-z0-9\\-\\(\\)\\,\\\"]+\")\n\n(def routes\n  [\"/\" {\"\" :ships\n        [\"ships/\" :ship/name] :ship\n        [\"ships/\" :ship/name \"/\" [name-pattern :ship/modification]] :ship-modification\n        \"outfits\" :outfits\n        [\"outfits/\" [name-pattern :outfit/name]] :outfit}])\n\n(defn- parse-url [url]\n  (let [{:keys [handler route-params]\n         :or {route-params {}}}\n        (bidi/match-route routes url)]\n    [handler route-params]))\n\n(defn- dispatch-route [matched-route]\n  (if (some? js/window.ga)\n    (js/window.ga \"send\" \"pageview\" js/location.pathname))\n  (rf/dispatch [::events/navigate-to matched-route]))\n\n(def url-for\n  (partial bidi/path-for routes))\n\n(defn start! []\n  (let [history (pushy/pushy dispatch-route parse-url)]\n    (pushy/start! history)))\n\n(defn ship-link [name]\n  (let [url (url-for :ship :ship/name (kebabize name))]\n    [:a {:href url} (nbspize name)]))\n\n(defn ship-modification-link [name modification]\n  (let [url (str \"/ships/\" (kebabize name) \"/\" (kebabize modification))]\n    [:a {:href url} (nbspize modification)]))\n\n(defn outfit-link [name]\n  (let [url (url-for :outfit :outfit/name (kebabize name))]\n    [:a {:href url} (nbspize name)]))\n"]}