{"version":3,"sources":["endless_ships/views/outfits.cljs"],"mappings":"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","names":["p1__27309#","p1__27310#","p1__27311#","endless-ships.views.outfits/default-columns","endless-ships.routes/outfit-link","endless-ships.views.utils/race-label","data","cljs.core.interpose","cljs.core.doall","cljs.core.map","license","cljs.core/deref","G__27317","re-frame.core/subscribe","endless-ships.views.utils/format-number","p1__27318#","p1__27319#","endless-ships.views.outfits/weapon-column-info","cljs.core.get_in","p1__27322#","p1__27323#","p1__27321#","p1__27324#","p1__27328#","p1__27329#","p1__27325#","p1__27326#","p1__27320#","p1__27327#","endless-ships.views.outfits/columns","cljs.core.get","endless-ships.views.outfits/outfits","p__27334","vec__27335","cljs.core.nth","type","type-attrs","rows","G__27338","reagent-table.core/reagent-table","cljs.core.atom","cljs.core.merge","cljs.core.into","cljs.core.concat","endless-ships.utils.tables/default-table-config","endless-ships.utils.outfits/types"],"sourcesContent":["(ns endless-ships.views.outfits\n  (:require [re-frame.core :as rf]\n            [reagent-table.core :as rt]\n            [endless-ships.views.utils :refer [kebabize race-label nbspize format-number]]\n            [endless-ships.utils.outfits :as utils]\n            [endless-ships.subs :as subs]\n            [endless-ships.routes :as routes]\n            [endless-ships.utils.tables :refer [default-table-config]]\n            [clojure.pprint :refer [pprint]]))\n\n(def default-columns\n  [{:header \"Name\"\n    :path [:name]\n    :key :name\n    :format #(routes/outfit-link %)}\n   {:header \"Race\"\n    :path [:race]\n    :key :race\n    :format #(race-label %)\n    :attrs (fn [data] {:style {:text-align \"center\" :display \"block\"}})}\n   {:header \"Licenses\"\n    :path [:licenses]\n    :key :licenses\n    :format #(interpose \" \" (doall (map (fn [license] ^{:key license} [:span.label\n                                                       {:class (str \"label-\" @(rf/subscribe [::subs/license-style license]))}\n                                                       license]) %)))\n    :attrs (fn [data] {:style {:text-align \"center\" :display \"block\"}})}\n   {:header \"Cost\"\n    :path [:cost]\n    :key :cost\n    :format format-number}\n   {:header \"Outfit sp.\"\n    :path [:outfit-space]\n    :key :outfit-space\n    :format format-number}])\n\n(def weapon-column-info\n  [{:header \"Shield damage\"\n    :path [:weapon :shield-damage :per-second]\n    :key :shield-damage\n    :format format-number}\n   {:header \"Shield damage / space\"\n    :expr #(/ (get-in % [:weapon :shield-damage :per-second]) (:outfit-space %))\n    :key :shield-damage-per-second\n    :format format-number}\n   {:header \"Hull damage\"\n    :path [:weapon :shield-damage :per-second]\n    :key :hull-damage\n    :format format-number}\n   {:header \"Hull damage / space\"\n    :expr #(/ (get-in % [:weapon :hull-damage :per-second]) (:outfit-space %))\n    :key :hull-damage-per-space\n    :format format-number}\n   {:header \"Range\"\n    :path [:weapon :range]\n    :key :range\n    :format format-number}\n   {:header \"Fire rate\"\n    :path [:weapon :shots-per-second]\n    :key :fire-rate\n    :sortable false}\n   {:header \"Firing energy/s\"\n    :path [:weapon :firing-energy :per-second]\n    :key :firing-energy\n    :format format-number}\n   {:header \"Firing heat/s\"\n    :path [:weapon :firing-heat :per-second]\n    :key :firing-heat\n    :format format-number}])\n\n(def columns\n  {:thrusters\n   [{:header \"Thrust\"\n     :path [:thrust]\n     :key :thrust\n     :format format-number}\n    {:header \"Thrust per space\"\n     :expr #(/ (:thrust %) (:outfit-space %))\n     :key :thrust-per-space\n     :format format-number}\n    {:header \"Thr. energy\"\n     :path [:thrusting-energy]\n     :key :thrusting-energy\n     :format format-number}\n    {:header \"Thr. heat\"\n     :path [:thrusting-heat]\n     :key :thrusting-heat\n     :format format-number}],\n\n   :steerings\n   [{:header \"Turn\"\n     :path [:turn]\n     :key :turn\n     :format format-number}\n    {:header \"Turn per space\"\n     :expr #(/ (:turn %) (:outfit-space %))\n     :key :turn-per-space\n     :format format-number}\n    {:header \"Turn energy\"\n     :path [:turning-energy]\n     :key :turning-energy\n     :format format-number}\n    {:header \"Turn heat\"\n     :path [:turning-heat]\n     :key :turning-heat\n     :format format-number}],\n\n   :reactors\n   [{:header \"Energy gen.\"\n     :expr #(+ (get % :energy-generation 0) (get % :solar-collection 0))\n     :key :energy-generation\n     :format format-number}\n    {:header \"Energy per space\"\n     :expr #(/ (+ (get % :energy-generation 0) (get % :solar-collection 0)) (:outfit-space %))\n     :key :energy-per-space\n     :format format-number}\n    {:header \"Heat gen.\"\n     :path [:heat-generation]\n     :key :heat-generation\n     :format format-number}\n    {:header \"Energy capacity\"\n     :path [:energy-capacity]\n     :key :energy-capacity\n     :format format-number}\n    {:header \"Maintenance\"\n     :path [:maintenance-costs]\n     :key :maintenance-costs\n     :format format-number}],\n\n   :batteries\n   [{:header \"Energy capacity\"\n     :path [:energy-capacity]\n     :key :energy-capacity\n     :format format-number}\n    {:header \"Energy per space\"\n     :expr #(/ (:energy-capacity %) (:outfit-space %))\n     :key :energy-per-space\n     :format format-number}],\n\n   :coolers\n   [{:header \"Cooling\"\n     :expr #(+ (get % :cooling 0) (get % :active-cooling 0))\n     :key :total-cooling\n     :format format-number}\n    {:header \"Cooling per space\"\n     :expr #(/ (+ (get % :cooling 0) (get % :active-cooling 0)) (:outfit-space %))\n     :key :cooling-per-space\n     :format format-number}\n    {:header \"Cooling energy\"\n     :path [:cooling-energy]\n     :key :cooling-energy\n     :format format-number}],\n\n   :shields\n   [{:header \"Shield generation\"\n     :path [:shield-generation]\n     :key :shield-generation\n     :format format-number}\n    {:header \"Shield per space\"\n     :expr #(/ (:shield-generation %) (:outfit-space %))\n     :key :shield-per-space\n     :format format-number}\n    {:header \"Shield energy\"\n     :path [:shield-energy]\n     :key :shield-energy\n     :format format-number}\n    {:header \"Shield heat\"\n     :path [:shield-heat]\n     :key :shield-heat\n     :format format-number}],\n\n   :hull-repair\n   [{:header \"Hull repair rate\"\n     :path [:hull-repair-rate]\n     :key :hull-repair-rate\n     :format format-number}\n    {:header \"Hull per space\"\n     :expr #(/ (:hull-repair-rate %) (:outfit-space %))\n     :key :hull-per-space\n     :format format-number}\n    {:header \"Hull energy\"\n     :path [:hull-energy]\n     :key :hull-energy\n     :format format-number}\n    {:header \"Hull heat\"\n     :path [:hull-heat]\n     :key :hull-heat\n     :format format-number}],\n\n   :ramscoops\n   [{:header \"Ramscoop\"\n     :path [:ramscoop]\n     :key :ramscoop\n     :format format-number}\n    {:header \"Ramscoop per space\"\n     :expr #(/ (:ramscoop %) (:outfit-space %))\n     :key :ramscoop-per-space\n     :format format-number}],\n\n   :guns weapon-column-info,\n\n   :secondary weapon-column-info,\n\n   :turrets weapon-column-info,\n\n   :anti-missile\n   [{:header \"Anti-missile\"\n     :path [:weapon :anti-missile]\n     :key :anti-missile\n     :format format-number}\n    {:header \"Range\"\n     :path [:weapon :range]\n     :key :range\n     :format format-number}\n    {:header \"Fire-rate\"\n     :path [:weapon :shots-per-second]\n     :key :fire-rate\n     :format format-number}\n    {:header \"Firing energy/s\"\n     :path [:weapon :firing-energy :per-second]\n     :key :firing-energy\n     :format format-number}\n    {:header \"Firing heat/s\"\n     :path [:weapon :firing-heat :per-second]\n     :key :firing-heat\n     :format format-number}],\n\n   :hand-to-hand\n   [{:header \"Capture attack\"\n     :path [:capture-attack]\n     :key :capture-attack\n     :format format-number}\n    {:header \"Capture defense\"\n     :path [:capture-defense]\n     :key :capture-defense\n     :format format-number}\n    {:header \"Illegal\"\n     :path [:illegal]\n     :key :illegal\n     :format format-number}]})\n\n(defn outfits []\n  [:div.app\n   (doall (map (fn [[type type-attrs]]\n                 (let [rows @(rf/subscribe [::subs/outfits-of-type type])]\n                   ^{:key type} [:div [:h2 (:header type-attrs)]\n                                 [rt/reagent-table\n                                  (atom rows)\n                                  (merge {:column-model (into [] (concat default-columns (type columns)))}\n                                         default-table-config)]]))\n               utils/types))])\n"]}