{"version":3,"sources":["endless_ships/views/ships_list.cljs"],"mappings":"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","names":["endless-ships.views.ships-list/checkbox-group","filter","toggling-event","iter__4622__auto__","s__28520","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4620__auto__","size__4621__auto__","cljs.core/count","b__28522","cljs.core/chunk-buffer","i__28521","vec__28523","cljs.core/-nth","cljs.core.nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__28519","cljs.core/chunk-rest","vec__28527","cljs.core/first","cljs.core/cons","cljs.core/rest","item","checked?","G__28526","G__28530","re-frame.core/dispatch","clojure.string/capitalize","cljs.core/name","endless-ships.views.ships-list/ships-filter","height","reagent.core.atom","cljs.core/deref","p1__28531#","collapsed?","G__28532","re-frame.core/subscribe","race-filter","G__28533","category-filter","G__28534","license-filter","G__28535","cljs.core/reset!","G__28536","p__28537","map__28538","cljs.core/--destructure-map","cljs.core.get","endless-ships.views.ships-list/crew-and-bunks","required-crew","bunks","endless-ships.views.table/right-cell","endless-ships.views.utils/format-number","endless-ships.views.utils/nbsp","p__28539","map__28540","endless-ships.views.ships-list/license-labels","licenses","endless-ships.views.table/left-cell","cljs.core.interpose","cljs.core.map","license","G__28541","endless-ships.views.ships-list/ship-row","name","map__28542","race","category","hull","shields","mass","engine-capacity","weapon-capacity","fuel-capacity","outfit-space","cargo-space","ship","G__28543","endless-ships.routes/ship-link","endless-ships.views.utils/race-label","endless-ships.utils.ships/total-cost","endless-ships.views.utils/nbspize","endless-ships.views.ships-list/ships-list","endless-ships.views.table/table","endless-ships.utils.ships/columns","G__28544","G__28545","cljs.core/chunk-first"],"sourcesContent":["(ns endless-ships.views.ships-list\n  (:require [re-frame.core :as rf]\n            [reagent.core :as ra]\n            [endless-ships.events :as events]\n            [endless-ships.subs :as subs]\n            [endless-ships.views.table :refer [table left-cell right-cell]]\n            [endless-ships.views.utils :refer [nbsp nbspize race-label format-number]]\n            [endless-ships.utils.ships :refer [total-cost or-zero columns]]\n            [endless-ships.routes :as routes]\n            [clojure.string :as str]))\n\n(defn checkbox-group [filter toggling-event]\n  (for [[item checked?] filter]\n    ^{:key item} [:div.checkbox\n                  [:label\n                   [:input {:type \"checkbox\"\n                            :checked checked?\n                            :on-change #(rf/dispatch [toggling-event item])}]\n                   (str/capitalize (name item))]]))\n\n(defn ships-filter []\n  (let [height (ra/atom nil)]\n    (fn []\n      (let [collapsed? @(rf/subscribe [::subs/ship-filters-collapsed?])\n            race-filter @(rf/subscribe [::subs/ships-race-filter])\n            category-filter @(rf/subscribe [::subs/ships-category-filter])\n            license-filter @(rf/subscribe [::subs/ships-license-filter])]\n        [:div.filters-group\n         [:div {:style {:overflow \"hidden\"\n                        :transition \"max-height 0.8s\"\n                        :max-height (if collapsed? 0 @height)}}\n          [:div.container-fluid\n           {:ref #(when % (reset! height (.-clientHeight %)))}\n           [:div.row\n            [:div.col-lg-2.col-md-3\n             [:strong \"Race\"]\n             (checkbox-group race-filter ::events/toggle-ships-race-filter)]\n            [:div.col-lg-2.col-md-3\n             [:strong \"Category\"]\n             (checkbox-group category-filter ::events/toggle-ships-category-filter)]\n            [:div.col-lg-2.col-md-3\n             [:strong \"License\"]\n             (checkbox-group license-filter ::events/toggle-ships-license-filter)]]]]\n         [:button.btn.btn-default\n          {:type \"button\"\n           :on-click #(rf/dispatch [::events/toggle-ship-filters-visibility])}\n          \"Filters \"\n          (if collapsed?\n            [:span.glyphicon.glyphicon-menu-down]\n            [:span.glyphicon.glyphicon-menu-up])]]))))\n\n(defn crew-and-bunks [{:keys [required-crew bunks]}]\n  (if (pos? required-crew)\n    [right-cell (str (format-number required-crew)\n                     nbsp \"/\" nbsp\n                     (format-number bunks))]\n    [right-cell]))\n\n(defn license-labels [{:keys [licenses]}]\n    [left-cell (interpose \" \"\n                          (map (fn [license] @(rf/subscribe [::subs/license-label license]))\n                               licenses))])\n\n(defn ship-row [name]\n  (let [{:keys [race category hull shields mass\n                engine-capacity weapon-capacity fuel-capacity\n                outfit-space cargo-space] :as ship} @(rf/subscribe [::subs/ship name])]\n    [:tr\n     [left-cell\n      ^{:key name} [routes/ship-link name]]\n     [left-cell (race-label race)]\n     [right-cell (format-number (total-cost ship))]\n     [left-cell (nbspize category)]\n     [right-cell (format-number hull)]\n     [right-cell (format-number shields)]\n     [right-cell (format-number mass)]\n     [right-cell (format-number engine-capacity)]\n     [right-cell (format-number weapon-capacity)]\n     [right-cell (format-number fuel-capacity)]\n     [right-cell (format-number outfit-space)]\n     [right-cell (format-number cargo-space)]\n     [crew-and-bunks ship]\n     [license-labels ship]]))\n\n(defn ships-list []\n  [:div.app\n   [ships-filter]\n   [table :ships columns @(rf/subscribe [::subs/ships-ordering])\n    (map (fn [name]\n           ^{:key name} [ship-row name])\n         @(rf/subscribe [::subs/ship-names]))]])\n"]}